<?xml version="1.0" encoding="UTF-8"?>
  <!DOCTYPE html>
  <html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" xmlns:epub="http://www.idpf.org/2007/ops">

  <head>
    <link href="epub.css" media="all" rel="stylesheet" type="text/css" />
    <script type="text/javascript" src="svg.js"></script>
  </head>

  <body id="conceptual_flow_with_tasks">
    <div class="content-wrapper">
      <div id="chapter_container" class='conceptualwithtasks'>
        <article class="chapter">
          <a id="TP40016643-CH3">&#x200c;</a><a id="TP40016643-CH3-ID0">&#x200c;</a>
          <h2 class="chapter-name">Introduzione a Swift</h2>

          <section class="section">
            <p class="para">Swift è un nuovo linguaggio di programmazione per lo sviluppo di app iOS, OS X, watchOS e tvOS che si basa sul meglio di C e di Objective-C, senza i vincoli di compatibilià con C. Swift adotta modelli di programmazione sicuri e aggiunge caratteristiche moderne
              per rendere lo sviluppo più facile, flessibile e divertente. Il nuovo inizio di Swift, assieme alla presenza dei framework Cocoa e Cocoa Touch - già maturi e apprezzati - è un'opportunità per ri-immaginare come funziona lo sviluppo software.
              <!--Swift’s clean slate, backed by the mature and much-loved Cocoa and Cocoa Touch frameworks, is an opportunity to reimagine how software development works.-->
            </p>
            <p class="para">
              Swift nasce da anni di intenso lavoro. Apple ha gettato le basi di Swift partendo dal perfezionamento del compilatore, del debugger e dell'infrastruttura dei framework. Abbiamo semplificato la gestione della memoria con Automatic Reference Counting (ARC). La
              nostra struttura base dei framework, costruita sulle solide basi di Foundation e Cocoa, è stata completamente modernizzata e standardizzata. Lo stesso Objective-C si è evoluto per supportare i blocchi, le collezioni letterali (<i>collection literals</i>)
              e i moduli, consentendo ai framework l'adozione di moderne tecnologie per il linguaggio senza interruzioni.
              <!--
               Objective-C itself has evolved to support blocks, collection literals, and modules, enabling framework adoption of modern language technologies without disruption.-->
              Grazie a queste basi, ora possiamo introdurre un nuovo linguaggio per il futuro dello sviluppo di software Apple.
            </p>
            <p class="para">
              Swift è familiare agli sviluppatori Objective-C. Adotta la leggibilità dei parametri descrittivi di Objective-C e la potenza dei modelli dinamici. Fornisce un accesso diretto ai framework Cocoa già esistenti e consente l'interoperabilità con codice scritto
              in Objective-C. Partendo da questo terreno in comune, Swift introduce molte nuove caratteristiche e unifica le porzioni di codice procedurali e orientate agli oggetti.</p>
            <p class="para">Swift è familiare ai nuovi programmatori. It is the first industrial-quality systems programming language che è espressivo e piacevole come linguaggio di scripting. Fornisce i <i>playgrounds</i>, una funzionalità innovativa che permette ai programmatori di sperimentare codice Swift e vedere i risultati immediatamente, senza lo sforzo di dover compilare ed eseguire un'app.</p>
            <p class="para">Swift combina il meglio del pensiero sui linguaggi moderni con saggezza grazie alla più ampia cultura ingegneristica di Apple.
              Il compilatore è ottimizzato per migliori prestazioni, e il linguaggio è ottimizzato per lo sviluppo, senza alcun compromesso. È progettato per scrivere sia il più semplice degli "hello, world", sia per costruirci un intero sistema operativo.
              Tutto ciò rende Swift un ottimo investimento futuro per gli sviluppatori e per Apple.</p>
            <p class="para">Swift è uno strumento fantastico per scrivere app iOS, OS X, watchOS e tvOS, e continuerà ad evolversi con nuove caratteristiche e funzionalità. I nostri obiettivi per Swift sono ambiziosi. Non vediamo l'ora di vedere cosa creerai con esso.</p>
          </section>



        </article>
      </div>

    </div>
  </body>

  </html>